// automatically generated by the FlatBuffers compiler, do not modify

package edu.vanderbilt.chuilian.types;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class BalancerPlan extends Table {
    public static BalancerPlan getRootAsBalancerPlan(ByteBuffer _bb) {
        return getRootAsBalancerPlan(_bb, new BalancerPlan());
    }

    public static BalancerPlan getRootAsBalancerPlan(ByteBuffer _bb, BalancerPlan obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public void __init(int _i, ByteBuffer _bb) {
        bb_pos = _i;
        bb = _bb;
    }

    public BalancerPlan __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public long timeTag() {
        int o = __offset(4);
        return o != 0 ? bb.getLong(o + bb_pos) : 0L;
    }

    public static int createBalancerPlan(FlatBufferBuilder builder,
                                         long timeTag) {
        builder.startObject(1);
        BalancerPlan.addTimeTag(builder, timeTag);
        return BalancerPlan.endBalancerPlan(builder);
    }

    public static void startBalancerPlan(FlatBufferBuilder builder) {
        builder.startObject(1);
    }

    public static void addTimeTag(FlatBufferBuilder builder, long timeTag) {
        builder.addLong(0, timeTag, 0L);
    }

    public static int endBalancerPlan(FlatBufferBuilder builder) {
        int o = builder.endObject();
        return o;
    }

    public static void finishBalancerPlanBuffer(FlatBufferBuilder builder, int offset) {
        builder.finish(offset);
    }
}

